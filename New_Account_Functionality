import static org.junit.Assert.assertEquals;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;

import io.github.bonigarcia.wdm.WebDriverManager;

public class New_Account_Functionality {

	
	@BeforeAll
	public static void beforeALL() throws InterruptedException {
		//---------------------------
		//Setup Environment  --------
		//---------------------------
		//Set environment variable
		System.setProperty("webdriver.http.factory", "jdk-http-client");
		
		//WebDriverManager will setup the chrome browser 
		WebDriverManager.chromedriver().setup();
		
		//Inicialize our virtual Browser
		TestData.driver = new ChromeDriver();
		
		//loginHappyPath();
	}
	
	@AfterAll
	public static void afterAll() {
		//driver.quit(); 
		//driver.close();
	}	
	
	
	@Test
	@DisplayName("Create an current account - happy path")
	public void tc013() throws InterruptedException {
		
		//Pre condition = Login Happy Path
		TestData.preConditionLogin();
		String customerID = TestData.preConditionCreateCustomer();
		
		//Click on New Account
		TestData.driver.findElement(By.linkText("New Account"));
		TestData.driver.get("https://demo.guru99.com/v4/manager/addAccount.php");
		
		//Enter Customer ID
		TestData.driver.findElement(By.name("cusid")).sendKeys(customerID);
		
		//Select Savings Account
		//Find the list
		WebElement accountTypeList = TestData.driver.findElement(By.name("selaccount"));
		//Create Select object with a list we found
		Select select = new Select(accountTypeList);
		//select the option you want
		select.selectByVisibleText(TestData.accountType_current);
		//select.selectByValue("Savings");
		
		//Enter Inicial Deposit
		TestData.driver.findElement(By.name("inideposit")).sendKeys(TestData.inicialAmount_current);
		
		//Click on Submit
		TestData.driver.findElement(By.name("button2")).click();
		
		//Checking the expected Results
		//Checking Successfully message
		String expectedResult = "Account Generated Successfully!!!";
		String actualResult = TestData.driver.findElement(By.cssSelector("#account > tbody > tr:nth-child(1) > td > p")).getText();
		
		assertEquals(expectedResult,actualResult);
		
		//AccountID
		String accountID = TestData.driver.findElement(By.cssSelector("#account > tbody > tr:nth-child(4) > td:nth-child(2)")).getText();
		System.out.println(accountID);
		
		//Checking CustomerID
		expectedResult = customerID;
		actualResult = TestData.driver.findElement(By.xpath("//*[@id=\"account\"]/tbody/tr[5]/td[2]")).getText();
		assertEquals(expectedResult, actualResult);
		
		//Checking Customer Name
		expectedResult = TestData.customerName;
		actualResult = TestData.driver.findElement(By.cssSelector("#account > tbody > tr:nth-child(6) > td:nth-child(2)")).getText();
		
		//Checking the Date of Opening field
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		LocalDateTime now = LocalDateTime.now();
		System.out.println(dtf.format(now));
		expectedResult = dtf.format(now);
		actualResult = TestData.driver.findElement(By.cssSelector("#account > tbody > tr:nth-child(9) > td:nth-child(2)")).getText();
		assertEquals(expectedResult,actualResult);
		
		
	}
	
}
